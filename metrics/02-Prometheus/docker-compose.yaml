---
#define the myapp service and specify the path to the application.
#Docker-compose will automatically build the image when we run up command. We also want to expose ports 8080 and 8081 with the prometheus metrics.
version: "3.9"
services:
  # the service name, in this case, myapp
  myapp:
    build:
      context: ./
      dockerfile: Dockerfile
#    build: ./my-app
    ports:
      - 8080:8080
      - 8081:8081
# docker-compose up --build
# When we make any changes to the source code, we need to rebuild the docker image.
  prometheus:
#    image: prom/prometheus:v2.40.4
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      # Note: the file format is "yml" not "yaml"
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    #image: grafana/grafana:9.3.0
    image: grafana/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=1234
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana:/var/lib/grafana

volumes:
  prometheus_data:
  grafana:
